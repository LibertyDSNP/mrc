# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Verify PR Commit
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  push:
    branches:
      - chore/boosting-fix-e2e
  pull_request:
    branches:
      - main
      - "*-development" # Feature Branches should suffix with -development
env:
  BIN_DIR: target/release
  PR_LABEL_METADATA_CHANGED: metadata-changed
  PR_LABEL_METADATA_VERSION_NOT_INCREMENTED: metadata-version-not-incremented

jobs:
  changes:
    name: Determine Changed Files
    runs-on: ubuntu-22.04
    outputs:
      rust: ${{steps.filter.outputs.rust}}
      build-binary: ${{steps.filter.outputs.build-binary}}
      cargo-lock: ${{steps.filter.outputs.cargo-lock}}
      run-e2e: ${{steps.filter.outputs.run-e2e}}
      ci-docker-image: ${{steps.filter.outputs.ci-docker-image}}
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Check for Changed Files
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: filter
        with:
          filters: |
            rust:
              - '**/*.rs'
              - '**/*.hbs'
              - '.rustfmt.toml'
              - '**/Cargo.toml'
              - '**/Cargo.lock'
            build-binary:
              - '**/*.rs'
              - '**/*.hbs'
              - '.rustfmt.toml'
              - '**/Cargo.toml'
              - '**/Cargo.lock'
              - 'js/api-augment/**'
              - 'e2e/**/*.{ts,json}'
            cargo-lock:
              - '**/Cargo.toml'
              - '**/Cargo.lock'
            run-e2e:
              - '**/*.rs'
              - '**/Cargo.toml'
              - 'e2e/**/*.{ts,json}'

  clear-metadata-labels:
    name: Clear Metadata Labels
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: Clear Metadata Changed Label
        if: contains(github.event.pull_request.labels.*.name, env.PR_LABEL_METADATA_CHANGED)
        uses: RobinJesba/GitHub-Labeler-Action@2f69380bbf2ee60b2f0893ef0f40582c9a34a64d
        with:
          GITHUB_TOKEN: ${{ github.token }}
          LABELS_TO_REMOVE: ${{env.PR_LABEL_METADATA_CHANGED}}
      - name: Clear Metadata Version Not Incremented Label
        if: contains(github.event.pull_request.labels.*.name, env.PR_LABEL_METADATA_VERSION_NOT_INCREMENTED)
        uses: RobinJesba/GitHub-Labeler-Action@2f69380bbf2ee60b2f0893ef0f40582c9a34a64d
        with:
          GITHUB_TOKEN: ${{ github.token }}
          LABELS_TO_REMOVE: ${{env.PR_LABEL_METADATA_VERSION_NOT_INCREMENTED}}

  # Workaround to handle skipped required check inside matrix
  # https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/troubleshooting-required-status-checks
  build-binaries-dummy:
    needs: changes
    if: needs.changes.outputs.build-binary != 'true'
    runs-on: ubuntu-22.04
    name: Build ${{matrix.network}} Binary on ${{matrix.branch_alias}} Branch
    strategy:
      matrix:
        # Match this to the real build-binaries job
        include:
          - network: dev
            git_branch: ${{github.head_ref}}
            spec: frequency-no-relay
            branch_alias: pr
    steps:
      - run: echo "Just a dummy matrix to satisfy GitHub required checks that were skipped"

  build-binaries:
    needs: changes
    if: needs.changes.outputs.build-binary == 'true'
    name: Build ${{matrix.network}} Binary on ${{matrix.branch_alias}} Branch
    strategy:
      fail-fast: true
      matrix:
        include:
          - network: dev
            git_branch: ${{github.head_ref}}
            spec: frequency-no-relay
            branch_alias: pr
    runs-on: ubicloud-standard-16
    container: ghcr.io/frequency-chain/frequency/ci-base-image:1.3.1
    env:
      NETWORK: mainnet
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          ref: ${{matrix.git_branch}}
      - name: Set Env Vars
        run: |
          export BUILT_BIN_FILENAME=frequency; echo "BUILT_BIN_FILENAME=$BUILT_BIN_FILENAME" >> $GITHUB_ENV
          echo "FINAL_BIN_FILENAME=$BUILT_BIN_FILENAME.${{matrix.network}}.${{matrix.spec}}.${{matrix.branch_alias}}" >> $GITHUB_ENV
      # # XXX Keep this step as it lets us skip full binary builds during development/testing
      # - name: Cache Binary for Testing
      #   id: cache-binary
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{env.BIN_DIR}}/${{env.FINAL_BIN_FILENAME}}
      #     key: binaries-${{runner.os}}-${{env.NETWORK}}-${{github.head_ref}}
      - name: Compile Binary
        if: steps.cache-binary.outputs.cache-hit != 'true'
        run: |
          CARGO_INCREMENTAL=0 RUSTFLAGS="-D warnings" cargo build --locked --release \
            --features ${{matrix.spec}}
      - name: Run Sanity Checks
        if: steps.cache-binary.outputs.cache-hit != 'true'
        working-directory: ${{env.BIN_DIR}}
        run: |
          file ${{env.BUILT_BIN_FILENAME}} && \
            ./${{env.BUILT_BIN_FILENAME}} --version
      - name: Rename Reference Binary
        if: steps.cache-binary.outputs.cache-hit != 'true'
        working-directory: ${{env.BIN_DIR}}
        run: cp ${{env.BUILT_BIN_FILENAME}} ${{env.FINAL_BIN_FILENAME}}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-binary-${{matrix.network}}-${{matrix.branch_alias}}-${{github.run_id}}
          path: ${{env.BIN_DIR}}/${{env.FINAL_BIN_FILENAME}}*
          if-no-files-found: error

  verify-js-api-augment:
    needs: build-binaries
    name: Verify JS API Augment
    runs-on: ubuntu-22.04
    container: ghcr.io/frequency-chain/frequency/ci-base-image:1.3.1
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Set Env Vars
        run: |
          echo "BIN_FILENAME=frequency.local.frequency-local.pr" >> $GITHUB_ENV
      - name: Set up NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: js/api-augment/package-lock.json
      - name: Install Latest Versions
        run: npm install # DO NOT use `npm ci` as we want the latest polkadot/api possible
        working-directory: js/api-augment
      - name: Lint
        run: npm run lint
        working-directory: js/api-augment
      - name: Download Binaries
        id: download-binaries
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-binary-local-pr-${{github.run_id}}
          path: ${{env.BIN_DIR}}
      - name: Extract and List Downloaded Binaries
        run: |
          download_dir=${{steps.download-binaries.outputs.download-path}}
          mv "${download_dir}"/artifacts*/* "${download_dir}"
          echo "Download dir: $download_dir"
          echo "Downloaded binaries: $(ls -l $download_dir)"
      - name: Set Binary Permissions
        working-directory: ${{env.BIN_DIR}}
        run: |
          chmod 755 ${{env.BIN_FILENAME}}
      - name: Output Metadata
        run: ${{env.BIN_DIR}}/${{env.BIN_FILENAME}} export-metadata  --chain=frequency-paseo-local --tmp ./js/api-augment/metadata.json
      - name: Build
        run: npm run build
        working-directory: js/api-augment
      - name: Test
        run: npm test
        working-directory: js/api-augment
      - name: Build & Publish Dry Run
        run: npm publish --dry-run
        working-directory: js/api-augment/dist
      - name: Generate npm tarball
        run: npm pack
        working-directory: js/api-augment/dist
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-api-augment-${{github.run_id}}
          path: js/api-augment/dist/frequency-chain-api-augment-0.0.0.tgz
          if-no-files-found: error

  run-e2e:
    if: needs.changes.outputs.run-e2e == 'true'
    needs: [build-binaries, verify-js-api-augment]
    name: Run E2E Tests
    runs-on: ubuntu-22.04
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set Env Vars
        run: |
          echo "BIN_FILENAME=frequency.dev.frequency-no-relay.pr" >> $GITHUB_ENV
          echo "FREQUENCY_PROCESS_NAME=frequency" >> $GITHUB_ENV
      - name: Download Binaries
        id: download-binaries
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-binary-dev-pr-${{github.run_id}}
          path: ${{env.BIN_DIR}}
      - name: List Downloaded Binaries
        run: |
          download_dir=${{steps.download-binaries.outputs.download-path}}
          mv "${download_dir}"/artifacts*/* "${download_dir}"
          echo "Download dir: $download_dir"
          echo "Downloaded binaries: $(ls -l $download_dir)"
      - name: Download api-augment tarball
        uses: actions/download-artifact@v4
        with:
          name: artifacts-api-augment-${{github.run_id}}
          path: js/api-augment/dist
      - name: Set Binaries Permissions
        working-directory: ${{env.BIN_DIR}}
        run: |
          chmod 755 $BIN_FILENAME
      - name: Start Local Node
        working-directory: ${{env.BIN_DIR}}
        run: |
          ./${{env.BIN_FILENAME}} \
            -lruntime=debug \
            --dev \
            --sealing=instant \
            --wasm-execution=compiled \
            --no-telemetry \
            --no-prometheus \
            --port $((30333)) \
            --rpc-port $((9944)) \
            --rpc-external \
            --rpc-cors all \
            --rpc-methods=Unsafe \
            --tmp \
            &
      - name: Set up NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: e2e/package-lock.json
      - name: Install Built api-augment
        run: npm install ../js/api-augment/dist/frequency-chain-api-augment-0.0.0.tgz
        working-directory: e2e
      - name: Install NPM Modules
        run: npm ci
        working-directory: e2e
      - name: Lint
        run: npm run lint
        working-directory: e2e
      - name: Run E2E Tests
        working-directory: e2e
        env:
          CHAIN_ENVIRONMENT: dev
          WS_PROVIDER_URL: ws://127.0.0.1:9944
        run: npm test
      - name: Stop Local Node
        if: always()
        run: pkill ${{env.FREQUENCY_PROCESS_NAME}}
